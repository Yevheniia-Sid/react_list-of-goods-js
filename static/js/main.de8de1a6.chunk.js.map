{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","sortField","setSortField","reverseField","setReverseField","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","cn","button","onClick","style","visibility","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAEIC,EAAmB,WACnBC,EAAiB,SA2BhB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,MAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAGIF,oBAAS,GAHb,mBACEG,EADF,KAEEC,EAFF,KAIMC,EA/BR,SAA0BC,EAA1B,GAA+D,IAA5BL,EAA2B,EAA3BA,UAAWE,EAAgB,EAAhBA,aACtCI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXT,GACFI,EAAcM,UAGTN,EAScO,CAAiBlB,EACpC,CAAEK,YAAWE,iBAEf,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,CACZC,QAAQ,EACR,WAAW,EACX,WAAYjB,IAAcJ,IAE5BsB,QAAS,kBAAMjB,EAAaL,IAP9B,iCAYA,wBACEmB,KAAK,SACLG,QAAS,kBAAMjB,EAAaJ,IAC5BiB,UAAWE,IAAG,CACZC,QAAQ,EACR,cAAc,EACd,WAAYjB,IAAcH,IAN9B,4BAYA,wBACEkB,KAAK,SACLG,QAAS,kBAAMf,GAAiBD,IAChCY,UAAWE,IAAG,CACZC,QAAQ,EACR,cAAc,EACd,YAAaf,IANjB,qBAYA,wBACEa,KAAK,SACLD,UAAU,4BACVK,MAAQnB,GAAaE,EACjB,CAAEkB,WAAY,WACd,CAAEA,WAAY,UAClBF,QAAS,WACPjB,EAAa,MACbE,GAAgB,IARpB,sBAeF,6BACGC,EAAaiB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC7GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.de8de1a6.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortField, reverseField }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_BY_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseField) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState(null);\n  const [\n    reverseField,\n    setReverseField,\n  ] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer,\n    { sortField, reverseField });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn({\n            button: true,\n            'is-info': true,\n            'is-light': sortField !== SORT_BY_ALPHABET,\n          })}\n          onClick={() => setSortField(SORT_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n          className={cn({\n            button: true,\n            'is-success': true,\n            'is-light': sortField !== SORT_BY_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setReverseField(!reverseField)}\n          className={cn({\n            button: true,\n            'is-warning': true,\n            'is-light': !reverseField,\n          })}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          style={(sortField || reverseField)\n            ? { visibility: 'visible' }\n            : { visibility: 'hidden' }}\n          onClick={() => {\n            setSortField(null);\n            setReverseField(false);\n          }}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}